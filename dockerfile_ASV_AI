ARG IMAGE_NAME=dustynv/ros:humble-ros-base-l4t-r35.1.0

FROM ${IMAGE_NAME}

ARG ROS2_DIST=humble

ENV DEBIAN_FRONTEND noninteractive

# Disable apt-get warnings
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 42D5A192B819C5DA || true && \
    apt-get update || true && apt-get install -y --no-install-recommends apt-utils dialog && \
    rm -rf /var/lib/apt/lists/*

ENV TZ=Europe/Paris

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \ 
    apt-get update && \
    apt-get install --yes lsb-release wget less udev sudo build-essential cmake python3 python3-dev python3-pip python3-wheel git jq libpq-dev zstd usbutils && \    
    rm -rf /var/lib/apt/lists/*

# Install software properties common (if not already present) and add deadsnakes PPA for newer Python versions
RUN apt-get update && apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa

# Install Python 3.10
RUN apt-get update && apt-get install -y python3.10 python3.10-venv python3.10-dev python3.10-distutils


# Update pip to the latest version
RUN python3 -m ensurepip && python3 -m pip install --no-cache --upgrade pip setuptools wheel

RUN apt-get update && \
    apt-get install -y \
        git \
        python3-opencv \
        libglib2.0-0

RUN python3 -m pip install torch==1.10.0 torchvision==0.11.1 -f https://download.pytorch.org/whl/cu114.html

RUN ln -sf /usr/lib/aarch64-linux-gnu/tegra/libv4l2.so /usr/lib/aarch64-linux-gnu/libv4l2.so

# Needed to work with pyzed on ARM
ENV OPENBLAS_CORETYPE=ARMV8

WORKDIR /home/asv_ai_workspace
COPY ./asv_ai_workspace /home/asv_ai_workspace

# Source ROS 2 setup file
RUN /bin/bash -c "source /opt/ros/eloquent/setup.bash"

# Setup environment variables
CMD ["bash"]